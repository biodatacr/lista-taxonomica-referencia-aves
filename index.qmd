---
title: "Lista taxonómica de referencia de aves de Costa Rica"
subtitle: "BiodataCR: plataforma para la gestión del conocimiento y la información sobre la biodiversidad de Costa Rica"
lang: es
date: today
date-format: long
bibliography: bib/referencias.bib
csl: bib/apa-6th-edition.csl
theme: litera
format:
  html:
    toc: true
    toc_float: true
    toc-title: "Contenidos"
---

```{r}
#| label: packages-load
#| echo: false
#| message: false

# Packages
library(readr)
library(forcats)
library(dplyr)
library(DT)
library(ggplot2)
library(plotly)
library(sf)
library(leaflet)
library(leaflet.extras)
library(leafem)
library(RColorBrewer)
```

```{r}
#| label: constants
#| echo: false

# File with final checklist
FILE_CHECKLIST <- "data/processed/lista-taxonomica-referencia-aves.csv"

# Field with species name in raw checklist
FIELD_SPECIES_NAME_RAW_CHECKLIST <- "Taxa"

# File with raw (initial) checklist
FILE_RAW_CHECKLIST <- "data/raw/AvesdeCostaRica_2022.xlsx"

# File with interim checklist
FILE_INTERIM_CHECKLIST <- "data/interim/avesdecostarica_2022.csv"

# File with not found names
FILE_NOTFOUND_CHECKLIST <- "data/processed/lista-taxonomica-referencia-aves-nombres-no-encontrados.csv"

# GBIF QUERY of occurrences of species in checklist
GBIF_QUERY_OCCURRENCES_CHECKLIST <- "https://doi.org/10.15468/dl.86vre5"

# GBIF QUERY of occurrences in higherrank
GBIF_QUERY_OCCURRENCES_HIGHERRANK <- "https://doi.org/10.15468/dl.qv6tjm"

# File with GBIF occurrences of species in checklist
FILE_OCCURRENCES_CHECKLIST <- "data/processed/registros-presencia-lista-taxonomica-referencia-aves-gbif.csv"

# File with GBIF occurrences in higher rank (e.g. class, order)
FILE_OCCURRENCES_HIGHERRANK <- "data/processed/registros-presencia-aves-gbif.csv"

# Number of records in the raw (initial) checklist
N_RAW_CHECKLIST <- 935

# Vernacular name of higher taxonomic group
HIGHERTAXONOMICGROUP_VERNACULAR <- "aves"

# Scientific name of higher taxonomic group
HIGHERTAXONOMICGROUP_SCIENTIFIC <- "Aves"

# Species name example
SPECIES_NAME_EXAMPLE <- "Turdus grayi"
```

```{r}
#| label: data-load
#| echo: false
#| message: false

# Species in checklist
checklist <- read_delim(FILE_CHECKLIST)

# Species names not found in GBIF Backbone Taxonomy
checklist_notfound <- read_delim(FILE_NOTFOUND_CHECKLIST)

# GBIF occurrences of species in checklist
# occurrences_checklist <-
#   st_read(
#     FILE_OCCURRENCES_CHECKLIST,
#     options = c(
#       "X_POSSIBLE_NAMES=decimalLongitude",
#       "Y_POSSIBLE_NAMES=decimalLatitude"
#     ),
#     quiet = TRUE
#   )

# GBIF occurrences in higher rank (e.g. class, order)
# occurrences_higherrank <-
#   st_read(
#     FILE_OCCURRENCES_HIGHERRANK,
#     options = c(
#       "X_POSSIBLE_NAMES=decimalLongitude",
#       "Y_POSSIBLE_NAMES=decimalLatitude"
#     ),
#     quiet = TRUE
#   )

# Number of records in checklist
n_checklist <- nrow(checklist)

# Number of records in checklist of not found names
n_checklist_notfound <- nrow(checklist_notfound)
```

# Introducción
La **lista taxonómica de referencia de `r HIGHERTAXONOMICGROUP_VERNACULAR` (clase _`r HIGHERTAXONOMICGROUP_SCIENTIFIC`_) de Costa Rica** de [BiodataCR](http://biodiversidad.go.cr/) permite integrar datos de diferentes publicadores en el sistema e implementar controles de calidad en aspectos como ortografía de los nombres científicos, sinonimia, nombres de autores y clasificación taxonómica, entre otros.

La siguiente tabla muestra las **`r n_checklist` especies** de la lista. La columna `Estado` indica si el nombre científico es aceptado o un sinónimo. Con los controles de la tabla, puede modificar la cantidad de especies desplegadas, ordenar los datos y realizar búsquedas. 

```{r}
#| label: checklist-table
#| echo: false

# Table
checklist |>
  select(order, family, scientificName, status) |>
  arrange(order, family, scientificName) |>
  datatable(
    colnames = c("Orden", "Familia", "Nombre científico", "Estado"),
    options = list(
      pageLength = 5,
      language = list(url = '//cdn.datatables.net/plug-ins/1.10.11/i18n/Spanish.json')
    ),
    rownames= FALSE
  )
```

La lista está disponible para descarga en formato de valores separados por comas (CSV) en:  
[lista taxonómica de referencia de `r HIGHERTAXONOMICGROUP_VERNACULAR` de Costa Rica](`r FILE_CHECKLIST`)

El repositorio con los datos y el código fuente de los programas está en la dirección:  
[https://github.com/biodatacr/lista-taxonomica-referencia-`r HIGHERTAXONOMICGROUP_VERNACULAR`](https://github.com/biodatacr/lista-taxonomica-referencia-`r HIGHERTAXONOMICGROUP_VERNACULAR`)

En las siguientes secciones, se describe el proceso de elaboración de la lista y se presentan algunas visualizaciones de los datos que contiene.

# Elaboración de la lista
El proceso inició con una lista de especies proporcionada por un grupo de expertos en `r HIGHERTAXONOMICGROUP_VERNACULAR` de Costa Rica, cuya estructura y formato se refinaron progresivamente para que los nombres científicos pudieran ser verificados en la [lista taxonómica de referencia o *Backbone Taxonomy*](https://www.gbif.org/dataset/d7dddbf4-2cf0-4f39-9b2a-bb099caae36c) de la [Infraestructura Mundial de Información en Biodiversidad (GBIF)](https://www.gbif.org/), una organización dedicada a la integración de datos de biológicos de todo el mundo. El *Backbone Taxonomy* de GBIF se construye a partir del [Catálogo de la Vida (COL)](https://www.catalogueoflife.org/), una lista integrada de nombres de especies de todos los grupos taxonómicos conocidos, y se completa con cerca de 100 fuentes adicionales de datos. Es actualizado periódicamente por medio de un proceso automático.

La verificación de los nombres científicos en el *Backbone Taxonomy* se llevó a cabo mediante un programa en el lenguaje [R](https://www.r-project.org/) y su paquete [rgbif](https://cran.r-project.org/web/packages/rgbif/). Este último proporciona acceso a los servicios web que componen la [interfaz de programación de aplicaciones (API) de GBIF](https://www.gbif.org/developer/summary). Como resultado de esta verificación, se detectaron errores ortográficos, sinónimos, y se recuperaron elementos adicionales de datos, como autores y niveles taxonómicos superiores, entre otros.

Seguidamente, se describen en detalle las etapas del proceso de elaboración de la lista.

### 1. Lista inicial
La [lista inicial](`r FILE_RAW_CHECKLIST`) contiene `r N_RAW_CHECKLIST` especies de `r HIGHERTAXONOMICGROUP_VERNACULAR` de Costa Rica y fue recopilada en el contexto del proyecto Biodiversidad en cifras [@bermudez_rojas_tania_biodiversidad_2021]. El documento fue proporcionado en formato XLSX (Microsoft Excel).

### 2. Lista intermedia
Se removieron de la lista inicial aquellas filas que no corresponden a datos (ej. título, autor, fecha, etc.) y el resultado se guardó en formato CSV, como una [lista intermedia](`r FILE_INTERIM_CHECKLIST`). De esta manera, se obtuvo un conjunto de datos debidamente estructurado, con una fila por cada especie y una columna por cada elemento de datos.

### 3. Lista final
La lista intermedia generada en el paso anterior se utilizó como entrada del programa [generar-lista-taxonomica.R](src/generar-lista.R), el cual, en resumen, ejecutó las siguientes tareas:

- "Limpió" la columna ``r FIELD_SPECIES_NAME_RAW_CHECKLIST`` (que contiene el nombre científico de la especie) al remover espacios en blanco innecesarios, caracteres especiales (i.e. no alfanuméricos) y palabras siguientes a la segunda (ej. autores), conservando así solamente las dos primeras palabras: género y epíteto específico (ej. *`r SPECIES_NAME_EXAMPLE`*). El resultado se guardó en una nueva columna llamada `name`.

- Buscó los nombres científicos de la columna `name` en el *Backbone Taxonomy* de GBIF y para cada recuperó elementos de datos como:

    - Nombre científico (género + epíteto específico + autores).
    - Niveles taxonómicos (reino, clase, ..., familia, género, especie).
    - Estado (aceptado, sinónimo).
    - Exactitud de la búsqueda (exacta, difusa).
    - Nivel de confianza de la búsqueda (0...99).

La [lista final](`r FILE_CHECKLIST`) consta de los `r N_RAW_CHECKLIST` nombres de especies de la lista original, revisados y corregidos, junto con los restantes elementos de datos recuperados del *Backbone Taxonomy* de GBIF. Además, se generó una [lista de nombres de especies no encontrados](`r FILE_NOTFOUND_CHECKLIST`) con `r n_checklist_notfound` nombres de especies para los que no se encontró coincidencia en el *Backbone Taxonomy* de GBIF.

Los elementos de datos (i.e. columnas) de la lista final están definidos de acuerdo con el [Darwin Core (DwC)](https://www.tdwg.org/standards/dwc/), un estándar orientado a facilitar la publicación e integración de datos de biodiversidad, el cual incluye un glosario de términos comúnmente utilizados en listas de especies, registros de colecciones biológicas, observaciones de ciencia ciudadana y eventos de monitoreo, entre otras fuentes [@wieczorek_darwin_2012].

La lista se empaqueta y distribuye en formato Darwin Core Archive (DwC-A), un archivo comprimido tipo ZIP que contiene archivos de datos en formato CSV y descriptores en formato XML. El DwC-A es el formato preferido para compartir datos en GBIF y en otras plataformas agrupadoras de datos de biodiversidad.

# Visualización de los datos
En esta sección, se presentan algunas visualizaciones de las especies de la lista y de sus registros de presencia. Estos últimos fueron recuperados del portal de datos de GBIF.

## Especies

### Lista final e indicadores de la búsqueda de nombres
La siguiente tabla muestra las `r n_checklist` especies de la lista final, junto con el nombre de cada especie en la lista inicial y las columnas correspondientes al nivel de exactitud (exacta, difusa) y nivel de confianza de la búsqueda (0...99). 

```{r}
#| label: checklist-curation-table
#| echo: false

# Table
checklist |>
  select(order, family, species, verbatim_name, status, matchType, confidence) |>
  arrange(order, family, species) |>
  datatable(
    colnames = c("Orden", "Familia", "Especie", "Especie (inicial)", "Estado", "Exactitud", "Confianza"),
    options = list(
      pageLength = 5,
      language = list(url = '//cdn.datatables.net/plug-ins/1.10.11/i18n/Spanish.json')
    ),
    rownames= FALSE
  )
```

### Diferencias entre los nombres de la lista inicial y los de la lista final
La siguiente tabla muestra las especies en las que hay alguna diferencia entre el nombre proporcionado en la lista inicial y el resultante en la lista final. Las diferencias se deben principalmente al uso de sinónimos y a errores ortográficos.

```{r}
#| label: checklist-differences-table
#| echo: false

# Table
checklist |>
  filter(species != verbatim_name) |>
  select(order, family, species, verbatim_name, status, matchType, confidence) |>
  arrange(order, family, species) |>
  datatable(
    colnames = c("Orden", "Familia", "Especie", "Especie (inicial)", "Estado", "Exactitud", "Confianza"),
    options = list(
      pageLength = 5,
      language = list(url = '//cdn.datatables.net/plug-ins/1.10.11/i18n/Spanish.json')
    ),
    rownames= FALSE
  )
```

### Nombres de especies no encontrados en el *Backbone Taxonomy* de GBIF
La siguiente tabla muestra la [lista de nombres de especies no encontrados](`r FILE_NOTFOUND_CHECKLIST`) en el *Backbone Taxonomy* de GBIF. En todos estos casos, se encontró el nombre del género pero no la especie.

```{r}
#| label: checklist-notfound
#| echo: false

# Table
checklist_notfound |>
  select(verbatim_name, matchType, rank, genus) |>
  arrange(verbatim_name, matchType) |>
  datatable(
    colnames = c("Especie", "Exactitud", "Nivel taxonómico encontrado", "Género"),
    options = list(
      pageLength = 5,
      language = list(url = '//cdn.datatables.net/plug-ins/1.10.11/i18n/Spanish.json')
    ),
    rownames= FALSE
  )
```

### Cantidad de especies por orden y familia
El siguiente gráfico de barras muestra la cantida de especies de la lista en cada orden y familia.

```{r}
#| label: checklist_plot_bar_order_family
#| echo: false

## ggplot2 bar plot
checklist_plot_bar_order_family <-
  checklist |>
  ggplot(aes(x = fct_infreq(order), fill = family)) +
  geom_bar() +
  xlab("Orden") +
  ylab("Especies") +
  scale_x_discrete(guide = "none") +
  theme_classic() +
  theme(axis.text.x = element_text(
    angle = 50,
    vjust = 1,
    hjust = 1
  ),
  legend.position = "none")

## plotly bar plot
ggplotly(checklist_plot_bar_order_family) |>
  config(locale = 'es')
```

# Referencias

::: {#refs}
:::